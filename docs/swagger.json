{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple API for creating crud transactions..",
        "title": "Test Center API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8123",
    "basePath": "/",
    "paths": {
        "/v1/table/create": {
            "post": {
                "description": "Create a new category as a dynamic table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create a new category table",
                "parameters": [
                    {
                        "description": "Category Input",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.CreateTableRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/table/delete": {
            "post": {
                "description": "Drops a table belonging to a specific category (like \"ccna\", \"ccnp\")",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Delete a category table",
                "parameters": [
                    {
                        "description": "Category Input",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.DeleteCategoryTableRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/table/read": {
            "get": {
                "description": "Retrieve all user-created question category tables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "List all question category tables",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/table/{category}/question/create": {
            "post": {
                "description": "Create a question with dynamic options and answers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Create a new question in a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category name",
                        "name": "category",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question Input",
                        "name": "createQuestion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.CreateQuestionRequest"
                        }
                    },
                    {
                        "description": "Question Input",
                        "name": "createQuestion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.CreateQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/table/{category}/question/delete": {
            "post": {
                "description": "Deletes a question from a specific category table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Delete a question by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category name",
                        "name": "category",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Delete Input",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.DeleteQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/table/{category}/question/read": {
            "post": {
                "description": "Fetches questions from a category table, optionally filtered by substring match in question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Read all questions from a category table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category name",
                        "name": "category",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Optional Include Filter",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.ReadQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/table/{category}/question/update": {
            "post": {
                "description": "Updates question text, options, and answers by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Update a question in a category table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category name",
                        "name": "category",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question Update Input",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "routes.CreateQuestionRequest": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        0,
                        1,
                        2
                    ]
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "10.0.0.0 – 10.255.255.255",
                        "172.16.0.0 – 172.31.255.255",
                        "192.168.0.0 – 192.168.255.255",
                        "169.254.0.0 – 169.254.255.255"
                    ]
                },
                "question": {
                    "type": "string",
                    "example": "Which of the following are valid IPv4 private address ranges?"
                }
            }
        },
        "routes.CreateTableRequest": {
            "type": "object",
            "required": [
                "category"
            ],
            "properties": {
                "category": {
                    "description": "like \"ccna\"",
                    "type": "string",
                    "example": "ccnp"
                }
            }
        },
        "routes.DeleteCategoryTableRequest": {
            "type": "object",
            "required": [
                "category"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "example": "ccnp"
                }
            }
        },
        "routes.DeleteQuestionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "routes.ReadQuestionRequest": {
            "type": "object",
            "properties": {
                "include": {
                    "description": "Optional filter substring",
                    "type": "string",
                    "example": "private"
                }
            }
        },
        "routes.UpdateQuestionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        0,
                        1,
                        2
                    ]
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "10.0.0.0 – 10.255.255.255",
                        "172.16.0.0 – 172.31.255.255",
                        "192.168.0.0 – 192.168.255.255",
                        "169.254.0.0 – 169.254.255.255"
                    ]
                },
                "question": {
                    "type": "string",
                    "example": "Which of the following are valid IPv4 private address ranges?"
                }
            }
        }
    }
}